[
    {
        "id":1,
        "title":"************NA************",
        "link":"#"
    },
    {
        "id":2,
        "title":"Design suitable data structures and implement pass-I of a two-pass assembler for pseudo-machine in Java using object oriented feature. Implementation should consist of a few instructions from each category and few assembler directives.",
        "link":"https://drive.google.com/file/d/135gRSz5Cjcsx1Z0sk6oQ-5se_yFTcFBY/view?usp=sharing"
    },
    {
        "id":3,
        "title":"Implement Pass-II of two pass assembler for pseudo-machine in Java using object oriented features. The output of assignment-1 (intermediate file and symbol table) should be input for this assignment.",
        "link":"https://drive.google.com/file/d/1rmKuPogFU3a87KMlUixAvkiFDKGTZCD-/view?usp=sharing"
    },
    {
        "id":4,
        "title":"Design suitable data structures and implement pass-I of a two-pass macro-processor using OOP features in Java",
        "link":"https://drive.google.com/file/d/1Yt4WYsKRdXqJUFicnPo3ZcfWSsjTN_UK/view?usp=sharing"
    },
    {
        "id":5,
        "title":"Write a Java program for pass-II of a two-pass macro-processor. The output of assignment-3 (MNT, MDT and file without any macro definitions) should be input for this assignment",
        "link":"https://drive.google.com/file/d/1VNs2-zx8sZCB6EVetNrIpiyZrNN8JpaF/view?usp=sharing"
    },
    {
        "id":6,
        "title":"Write a program to create Dynamic Link Library for any mathematical operation and write  an application program to test it. (Java Native Interface / Use VB or VC++)",
        "link":"https://drive.google.com/file/d/1VNs2-zx8sZCB6EVetNrIpiyZrNN8JpaF/view?usp=sharing"
    },
    {
        "id":7,
        "title":"Write a program using Lex specifications to implement lexical analysis phase of compiler to generate tokens of subset of ‘Java’ program.",
        "link":"https://drive.google.com/file/d/1VNs2-zx8sZCB6EVetNrIpiyZrNN8JpaF/view?usp=sharing"
    },
    {
        "id":8,
        "title":"Write a program using Lex specifications to implement lexical analysis phase of compiler to count no. of words, lines and characters of given input file.",
        "link":"https://drive.google.com/file/d/1DpErrFTB-MIkz06Oj7dom-AMC5Xx-nZh/view?usp=sharing"
    },
    {
        "id":9,
        "title":"Write a program using YACC specifications to implement syntax analysis phase of compiler to validate type and syntax of variable declaration in Java.",
        "link":"https://drive.google.com/file/d/1e3ZpFVLKTt48c977QhjIlzmI3Jw7jVpD/view?usp=sharing"
    },
    {
        "id":10,
        "title":"Write a program using YACC specifications to implement syntax analysis phase of compiler to recognize simple and compound sentences given in input file",
        "link":"https://drive.google.com/file/d/1iy6aaDMaaYpO8hOBZpXCukPK2bn7EeH3/view?usp=sharing"
    },
    {
        "id":11,
        "title":"Write a Java program (using OOP features) to implement following scheduling algorithms: FCFS , SJF (Preemptive), Priority (Non-Preemptive) and Round Robin (Preemptive)",
        "link":"https://drive.google.com/file/d/11fuMlT-_iHOTSUiH63YELWaqpkRr3N55/view?usp=sharing"
    },
    {
        "id":12,
        "title":"Write a Java program to implement Banker’s Algorithm",
        "link":"https://drive.google.com/file/d/1GZYyvVlpAG1kB0amtjt2FGnSWrYwnvdU/view?usp=sharing"
    },
    {
        "id":13,
        "title":"Implement UNIX system calls like ps, fork, join, exec family, and wait for process management (use shell script/ Java/ C programming).",
        "link":"https://drive.google.com/file/d/1N_-qeZSIKcTOsi0oQWfEe9H-JUV1_XWQ/view?usp=sharing"
    },
    {
        "id":14,
        "title":"Study assignment on process scheduling algorithms in Android and Tizen.",
        "link":"https://drive.google.com/file/d/1N_-qeZSIKcTOsi0oQWfEe9H-JUV1_XWQ/view?usp=sharing"
    },
    {
        "id":15,
        "title":"Write a Java Program (using OOP features) to implement paging simulation using 1. Least Recently Used (LRU) 2. Optimal algorithm",
        "link":"https://drive.google.com/file/d/1C1FCqnNQjplqxQCIjNdpSDJpH9PmppGn/view?usp=sharing"
    }
    
]